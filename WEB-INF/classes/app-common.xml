<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	">
 
	<!-- 定义数据源Bean，使用C3P0数据源实现 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- 指定连接数据库的驱动 -->
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<!-- 指定连接数据库的URL -->
		<property name="jdbcUrl" value="jdbc:mysql://localhost/forum" />
		<!-- 指定连接数据库的用户名 -->
		<property name="user" value="root" />
		<!-- 指定连接数据库的密码 -->
		<property name="password" value="root" />
		<!-- 指定连接数据库连接池的最大连接数 -->
		<property name="maxPoolSize" value="40" />
		<!-- 指定连接数据库连接池的最小连接数 -->
		<property name="minPoolSize" value="1" />
		<!-- 指定连接数据库连接池的初始化连接数 -->
		<property name="initialPoolSize" value="1" />
		<!-- 指定连接数据库连接池的连接的最大空闲时间 -->
		<property name="maxIdleTime" value="20" />
	</bean>
	<!-- 定义Hibernate的SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- 依赖注入数据源，注入正是上面定义的dataSource -->
		<property name="dataSource" ref="dataSource" />
		<!-- mappingResouces属性用来列出全部映射文件 -->
		<property name="mappingResources">
			<list>
				<!-- 以下用来列出Hibernate映射文件 -->
				<value>entity/Attention.hbm.xml</value>
				<value>entity/Category.hbm.xml</value>
				<value>entity/College.hbm.xml</value>
				<value>entity/Diary.hbm.xml</value>
				<value>entity/Footmark.hbm.xml</value>
				<value>entity/ForbidList.hbm.xml</value>
				<value>entity/ForumInfo.hbm.xml</value>
				<value>entity/Information.hbm.xml</value>
				<value>entity/Major.hbm.xml</value>
				<value>entity/Reply.hbm.xml</value>
				<value>entity/SecretContent.hbm.xml</value>
				<value>entity/SecretDialog.hbm.xml</value>
				<value>entity/Subject.hbm.xml</value>
				<value>entity/User.hbm.xml</value>
				<value>entity/Rank.hbm.xml</value>
				<value>entity/Weather.hbm.xml</value>
			</list>
		</property>
		<!-- 定义Hibernate的SessionFactory的属性 -->
		<property name="hibernateProperties">
			<!-- 配置Hibernate属性 -->
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLDialect
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=false
				hibernate.format_sql=false;
				
				<!-- 开启二级缓存 
				hibernate.cache.use_second_level_cache=true
				设置二级缓存的提供者
				hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider -->
			</value>
		</property>
	</bean>
	
	
	<!-- Spring开启零配置 -->
	<context:annotation-config />
	<context:component-scan base-package="action,dao.impl,service.impl,pagination,advice,timer" />
	
	
	<bean id="reportJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass">
			<value>timer.MyTimer</value>
		</property>
		<property name="jobDataAsMap">   
		    <map>  
		        <entry key="forbidListService">   
		            <ref bean="forbidListService"/>   
		        </entry>   
		    </map>   
		</property>   
	</bean>
	<bean id="getWeather" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass">
			<value>timer.GETWeatherTimer</value>
		</property>
		<property name="jobDataAsMap">   
		    <map>  
		        <entry key="weatherService">   
		            <ref bean="weatherService"/>   
		        </entry>   
		    </map>   
		</property>   
	</bean>
	
	
	<!-- <bean id="simpleReportTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="reportJob" />
		<property name="startDelay">
			<value>1000</value>
		</property>
		<property name="repeatInterval">
    		<value>3000</value>
		</property>
	</bean> -->
	
	<bean id="cronReportTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">   
		<property name="jobDetail" ref="reportJob" />   
		<property name="cronExpression">   
			<value>1 59 * * * ?</value>   
		</property>   
	</bean>   
	
	<bean id="getWeatherTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">   
		<property name="jobDetail" ref="getWeather" />   
		<property name="cronExpression">   
			<value>1 1,30 * * * ?</value>   
		</property>   
	</bean>   
	
	
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronReportTrigger"/>
				<ref bean="getWeatherTrigger"/>
			</list>
		</property>
	</bean>
	
	
	
	

	<!-- 声明式事务 -->
	<!-- 该类实现PlatFormTransactionManager接口,是针对Hibernate的特定实现 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<!-- 配置事务增强处理Bean, 指定事务管理器 -->
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 配置事务增强自责Bean, 指定事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- <tx:method name="find*" read-only="true" />
			<tx:method name="get*" read-only="true" /> -->
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 配置一个切入点 -->
		<aop:pointcut id="myPointcut" expression="execution(* service.impl.*Impl.*(..))" />
		<!-- 指定在myPoingcut切入点应用txAdvice事务增强处理 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut" />
	</aop:config>
	
	<aop:aspectj-autoproxy/>
</beans>